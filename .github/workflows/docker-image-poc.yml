name: GitHub Actions PoC mongo-java-driver - Alexandre Marini
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  # Trigger the action manually from the UI
  workflow_dispatch:
  # Trigger the action when a pull request is closed on the main branch, with tag 'r*.*.*' and (do not ends in `*-alpha` or `*-beta`)
  pull_request:
    types:
      - closed
    branches:
      - main
    tags:
      - r*.*.*
      - '!**-alpha'
      - '!**-beta'

jobs:
  poc_drivers_playground_automated_builds:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
      actions: read

    steps:
      #- run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "Setup AWS ECR Details..."
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
      - run: echo "Login to Amazon ECR..."

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug ECR login registry
        run: echo "ECR login registry ${{ steps.login-pf-aws-ecr.outputs.registry }}"

      - run: echo "üéâ Setup QEMU and Docker buildx."
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # with:
         # buildkitd-flags: --debug

      #- run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"

      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Build and push the tagged docker image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: 5.3.1
          #IMAGE_TAG: ts-java-alpine-5.3.1
        with:
          context: .
          push: true
          tags: ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}
          provenance: false

        #run: |
         # docker buildx build ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}} -t ${{env.IMAGE_TAG}} --push .
         # docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}
      - run: echo "üçè This job's status is ${{ job.status }}."
